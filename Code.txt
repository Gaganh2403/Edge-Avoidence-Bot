#include <NewPing.h>
#include <AFMotor.h>

// Ultrasonic pins (using analog pins as digital pins)
#define TRIG_LEFT   A0
#define ECHO_LEFT   A1
#define TRIG_RIGHT  A2
#define ECHO_RIGHT  A5
#define MAX_DISTANCE 200

// Motor setup (4 motors on L293D motor shield)
AF_DCMotor motor1(1);  // Left front
AF_DCMotor motor2(2);  // Left back
AF_DCMotor motor3(3);  // Right front
AF_DCMotor motor4(4);  // Right back

NewPing sonarLeft(TRIG_LEFT, ECHO_LEFT, MAX_DISTANCE);
NewPing sonarRight(TRIG_RIGHT, ECHO_RIGHT, MAX_DISTANCE);

void setup() {
  Serial.begin(9600);
  setAllMotorsSpeed(150);
}

void loop() {

  int distanceLeft = sonarLeft.ping_cm();
  int distanceRight = sonarRight.ping_cm();

  Serial.println(distanceLeft);
  Serial.println(distanceRight);

  if (distanceLeft > 10 && distanceRight > 10) {
    stopMotors();
    delay(1000);
    moveBackward();
    delay(1000);
    rightTurn();
    delay(1000);
  } 
  else if (distanceRight > 10 && distanceLeft<=10) {
    stopMotors();
    delay(1000);
    moveBackward();
    delay(500);
    leftTurn();
    delay(1000);
    moveForward();
  } else if (distanceLeft > 10 && distanceRight <= 10) {
    stopMotors();
    delay(1000);
    moveBackward();
    delay(500);
    rightTurn();
    delay(1000);
    moveForward();
  } else {
    moveForward();
  }
}

void setAllMotorsSpeed(int speed) {
  motor1.setSpeed(speed);
  motor2.setSpeed(speed);
  motor3.setSpeed(speed);
  motor4.setSpeed(speed);
}

void moveForward() {
  motor1.run(BACKWARD);
  motor2.run(BACKWARD);
  motor3.run(BACKWARD);
  motor4.run(BACKWARD);
  
}

void moveBackward() {
  
  motor1.run(FORWARD);
  motor2.run(FORWARD);
  motor3.run(FORWARD);
  motor4.run(FORWARD);
}

void rightTurn() {
  motor1.run(BACKWARD);
  motor2.run(BACKWARD);
  motor3.run(FORWARD);
  motor4.run(FORWARD);
}

void leftTurn() {
  motor3.run(BACKWARD);
  motor4.run(BACKWARD);
  motor1.run(FORWARD);
  motor2.run(FORWARD);
}

void stopMotors() {
  motor3.run(RELEASE);
  motor4.run(RELEASE);
  motor1.run(RELEASE);
  motor2.run(RELEASE);
}
